echo "                                   Работа с фаилами и директориями"

# 1. Команды вывода содержимого фаила в терминал:
# cat  - команда выводит содержимое фаила в консоль
# more - команда выводит содержимое фаила в консоль частями, с возможностью пролистывания стрелочками, q - выход
# less - команда выводит содержимое фаила в консоль, кго можно листать плавно и искать записав нужное слово от слэша(/слово)
# $ cat some/file.txt                             - выведет в консоль содержимое фаила some/file.txt
# $ more file.txt                                 - выведет в консоль содержимое фаила file.txt
# $ less file.txt                                 - выведет в консоль содержимое фаила file.txt


# 2. touch - команда позволяет создать один или несколько файлов(не может создавать папки). Если применить ее к существующему фаилу, то просто изменит время его создания и все(эта функция работает и с директориями).
# $ touch index.html                              - будет создан файл index.html в текущей директории
# $ touch www/index.html                          - будет создан файл в папке www
# $ touch www/index.html www/css/style.css        - будет создано два файла в папке www и в www/css


# 3. mkdir - позволяет создать папку в определенной директории, можно создать как одну, так и несколько папок одновременно.
# -p  - флаг чтобы создать сразу и папку и папку внутри нее
# $ mkdir www                            - будет создана папка www в текущей директории
# $ mkdir user www/css                   - будут созданы две папки(одна в уже существующей папке www)
# $ mkdir -p aaa/bbb                     - создать директорию и вложенную директорию сразу aaa/bbb


# 4. cp - используется для копирования фаилов или директорий. При копировании можно указать новое имя и новую папку для файла.
# -v  - флаг для вывода инфы о копировании
# $ cp file.txt file2.txt                 - копирование file.txt в текущую директорию и изменение его имени на file2.txt
# $ cp -v file.txt file2.txt              - тоже с отображение инфы
# $ cp file.txt www                       - копирование file.txt из текущей директории в www/
# $ cp ~/some/file.txt www/file2.txt      - копирование file.txt из директории ~/some/ в www/ и изменение его имени на file2.txt
# $ cp ~/some/file.txt .                  - копирование file.txt из директории ~/some/ в текущую директорию
# $ cp *.txt www                          - копирование всех текстовых фаилов в www
# $ cp file?.txt www                      - копирование всех текстовых фаилов типа fileA.txt в www

# Для копирования директорий(со всем содержимым) нужно добавить флаг -R
# $ cp -R www new                         - копируется директория www с названием new в текущую директорию


# 5. mv - позволяет переместить(вырезать и вставить) файл из одной папки в другую, так же используется для переименования.
# $ mv test/file.txt some                 - перемещение файла file.txt из папки test в папку some
# $ mv file.txt ..                        - перемещение файла на уровень выше(тут выше от текущего уровня рабочей директории)
# $ mv www/file.txt www/..                - перемещение фаила из папки www в текущую папку
# $ mv file.txt ~/Desktop                 - перемещение файла file.txt на рабочий стол

# $ mv file.txt .file.txt                 - переименование файла file.txt в .file.txt (тоесть скрытый)
# $ mv aaa ccc                            - переименование директории aaa в ccc


# 6. rm - команда удаляет один или несколько файлов или папок.
# $ rm test/some/file.txt                 - удаление файла file.txt из директории test/some/
# $ rm file.txt some.html                 - удаление файлов file.txt и some.html из текущей директории
# $ rm test/*                             - удалить все фаилы из директории test/
# $ rm test/*.txt                         - удалить все фаилы с расширением .txt из директории test/
# $ rm text.*                             - удалить все фаилы с названием text.
# $ rm file_*.txt                         - удаление всех файлов, что начинаются на file_ и заканчиваются .txt

# rmdir - команда для удаления пустых папок
# $ rmdir aaa                             - удалить папку aaa

# Для удаления не пустых папок нужно дописать опции -rf
# -r - ключ используется для того, чтобы выполнять рекурсивный обход всех директорий.
# -f - (force) ключ для того чтобы не запрашивать никаких подтверждений для команды

# $ rm -rf test/dir                       - удаление папки dir и всего ее содержимого из папки test



echo "                                         Текстовые редакторы"

# В Linux в зависимости от версии могут присутствовать разные встроенные или устаневливаемые текстовые редакторы. Наиболее популярными являются: nano, pico(почти копия nano, но более старая), vi, vim, gedit

# gedit - удобный редактор для графической оболочки, как стандартный блокнот на винде, открывает фаилы при 2йном нажатии именно он
# $ gedit                                - откроет окно редактора в графической оболочке

# nano - команда позволяет открыть фаил для редактирования при помощи текстового редактора nano, если фаил не существует, то он будет создан и открыт. В окне редактирования можно изменять фаил, снизу прописаны дополнительные команды, для них символ "^" обозначет Ctrl
# $ nano                                 - создать и открыть новый фаил в текстовом редакторе nano
# $ nano index.html                      - будет создан или открыт файл index.html
# $ nano www/index.html                  - будет создан или открыт файл index.html из папки www

# vi - почти копия vim
# vi                                     - запустить редактор vi
# vi file.txt                            - открыть фаил в редакторе vi
# По умолчанию в режиме команд, чтобы редактировать текст нужно нажать "i", выйти обратно в командный режим клавиша "Esc"
# Для ввода команд надо сперва нгажать ":" - (:q - выйти, :w имя_фаила - записать в фаил, :wq имя_фаила - выйти и записать, ! - в конце команды, тогда не будет спрашивать если не сохранено)

# vim  - нужно установить
# $ sudo apt-get install vim             - установим текстовый редактор вим (есть в стандартном репозитории)
# $ vim                                  - проверим (выход из vim  :qa и нажать энтер)

# xed - для Минт 19.3 добавили другой текстовый редактор
# $ xed



echo "                                     Линки(Ярлыки и дубликаты)"

# 1. Линки-ярлыки(simbolic link/симлинк) - можно создавать для фаилов и папок и при исполнении или применении к ним команд cd, cat, nano и похожих, эти команды применятся к исходному фаилу или папке. Лучше указывать полный путь для линка

# $ ln -s ~/Documents/dir1 linkToDir1               - создаем в текущей директории ярлык linkToDir1 для папки dir1
# $ ln -s ~/Documents/dir1 ~/Desktop/linkToDir2     - создаем на рабочем столе ярлык linkToDir2 для папки dir1
# $ ln -s ~/Documents/file.txt some.txt             - создаем в текущей директории ярлык some.txt для фаила file.txt

# $ cd linkToDir1                                   - перейти к содержимому ~/Documents/dir1, через линк но адрес будет линка

# $ mv linkToDir1 ~/Desktop                         - переносим линк на рабочий стол

# $ cp -R some.txt ~/Desktop                        - при копировании нужен ключ -R, а иначе захочет копировать фаил

# $ cat some.txt                                    - просматриваем фаил file.txt через линк some.txt

# $ rm linkToDir1                                   - удаляем линк


# 2. Линки-дубликаты(жесткие ссылки) - создаются ссылки-дубликаты фаилов, которые полностью дублируют все свойства фаила. Сами данные не копируются, к ним лишь создается ссылка(тоесть доп место на диске не занимает). Жесткая ссылка это ссылка на данные и оба файла ведут на один экземпляр данных. Жесткие ссылки нужны, чтобы создавать "копию" файла, не копируя его на самом деле.

# $ ln file.txt somedup                             - создаем somedup дубликат фаила file.txt
















#
