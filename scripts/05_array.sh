echo "                                             Массивы"

# Инициализация массива:
arr=()                                         # Новый пустой массив
arr=("kiwi" "pear" "kiwi" "banana" "melon" "") # новый массив с элементами
arr=($((a+b+c)) $((a-b-c)))                    # массив с элементами-результатами операций над переменными

# Вывод элементов массива по индексам:
echo ${arr[@]}  #=> "" "kiwi" "pear" "kiwi" "banana" "melon"
echo ${arr[0]}  #=> "kiwi"
echo ${arr[1]}  #=> "pear"
echo ${arr[3]}  #=> "banana"

# Переопределение элементов по индексу:
arr[5]="AAA"
echo ${arr[@]} #=> "kiwi" "pear" "kiwi" "banana" "melon" "AAA"

# Длинна массива
echo $(( ${#arr[@]} ))      #=> 6
echo $(( ${#arr[@]} -1 ))   #=> 5       # индекс последнего элемента

# Распечатать массив (каждый элемент с новой строки)
printf '%s\n' "${arr[@]}"



echo "                                              Срезы"

# Срез, где первый аргумент это индекс начала среза, а 2й аргумент это число элементов в срезе
echo ${arr[@]:0:3} #=> kiwi pear kiwi
echo ${arr[@]:1:3} #=> pear kiwi banana

# Срез это не массив а строка, чтобы сделать массив нужно, заново проинициализировать, обернув его в скобки
q2=( "${arr[@]:2:3}" ) 
echo ${q2[@]} #=> kiwi banana melon

# Срез от индекса 2 и до конца массива
echo ${arr[@]:2} #=> kiwi banana melon

# Срез с использованием переменной для индекса
del_element=3
echo ${arr[@]:0:$((del_element-1))} #= kiwi pear



echo "                                         Добавление элементов"

# Добавить элемент в начало массива:
arr=("new_element" "${arr[@]}")                   # один элемент
arr=("new_element1" "new_element2" "${arr[@]}")   # несколько элементов

# Добавить элемент в конец массива:
arr=( "${arr[@]}" "new_element" )                 # один элемент
arr=( "${arr[@]}" "new_element1" "new_element2")  # несколько элементов

# Добавить элемент в конец массива, альтернативный вариант:
arr+=( "new_element" )                   # один элемент
arr+=( "new_element1" "new_element2" )   # несколько элементов


# Добавить новый элемент в определенный индекс массива - нужно взять срез до этого индекса, потом новый элемент потом срез от этого индекса
arr=( "${arr[@]:0:2}" "new_element" "${arr[@]:2}" ) # тут вставляем новый элемент под индексом 2



echo "                                          Удаление элементов"

# 1. Чтобы удалить элемент с нужным индексом просто добавим 2 среза без этого элемента
arr=( "${arr[@]:0:2}" "${arr[@]:3}" )

# Тоже с использованием переменной для индекса
n=3
arr=( "${arr[@]:0:$((n-1))}" "${arr[@]:$n}" )


# 2. Использование unset -  присваиваем элементу значение «null»
unset -v 'arr[2]'


# 3. Шаблон замены, если вы знаете значение элементов массива, чтобы обрезать их значение (заменить пустой строкой).
arr=( "${arr[@]/PATTERN/}" )



echo "                                            Итерация массива"

# Обход массива через цикл for:
categories=("men" "women" "kids")
for word in "${categories[@]}"; do
  echo $word;
done



echo "                                          Реверсирование массива"
# Создание реверсированного массива
arr=("kiwi" "pear" "kiwi" "banana" "melon")
res=()
size=$(( ${#arr[@]} ))
for (( i=0; i<=$size; i++ )); do
  res[$i]="${arr[$((size-i))]}"
done
echo ${res[@]} #=> melon banana kiwi pear kiwi



echo "                                            Сортировка массива"

# Сортировка массива(передаем цикл в sort)
a=("b" "z" "a")
b=($(for s in ${a[@]}; do echo $s; done | sort))    # в порядке возрастания
c=($(for s in ${a[@]}; do echo $s; done | sort -r)) # в порядке убывания
echo "${b[@]}" #=> a b z
echo "${c[@]}" #=> z b a



echo "                                       Преобразование массива в строку"

# Исходный массив символов
array=('H' 'e' 'l' 'l' 'o')

# 1. printf выводит каждый элемент массива без разделителей, что позволяет получить строку.
string=$(printf "%s" "${array[@]}")

# 2. Использование echo Используя ${array[*]}, вы получаете все элементы массива, объединенные пробелами. Если вам нужно объединить без пробелов, используйте ${array[@]} в контексте printf
string="${array[*]}"

# 3. Цикл проходит по каждому элементу массива и добавляет его к строке
string=""
for char in "${array[@]}"; do
  string+="$char"
done














#
