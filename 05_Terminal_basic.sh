echo "                                             Терминал"

# При помощи команд терминала(командной строки) Linux можно выполнять людые действия в операционной системе.

# https://putty.org.ru/articles/unix-linux-ref        -  справочник по командам

# Название символов:
# ~ - тильда
# ^ - карет
# & - и
# | - или
# \ - бэкслэш
# / - слэш


# Ctrl + Alt + T   - открыть терминал, так же можно зайти через меню приложений или обзор на верхней панели


# Любой дистрибутив можно переключить в консольный режим отключив графическую оболочку
# Ctrl + Alt + F3             - переключиться в консольный режим отключив графическую оболочку(спросит логин и пароль)
# Ctrl + Alt + [F3|F4|F5|F6]  - альтернативные сессии консольного режима(можно переключаться туда-сюда)
# ctrl + Alt + F2             - выйти из консольного режима на экран логина
# Ctrl + Alt + F1             - выйти из консольного режима на рабочий стол(так же может войти в консольный режим но по другому ?)


# Ctrl + L          - очистить терминал, аналог команды clear

# Ctrl + С          - прервать процесс

# Ctrl + Z          - остановить процесс например выполним команду:
# $ ping google.com
# Нажимаем Ctrl + Z, процесс ставится на паузу
# Далее можем выполнять любые команды
# $ fg              - возобновляем процесс что был на паузе


# Tab               - вместо полного введения названия команды, файла или папки можно ввести начальные символы и нажать tab, а терминал дополнит остальную часть названия или предложит альтернативы, если вариантов больше одного


# /            - корневая директория
# .            - текущая директория (иногда может пригодиться)
# ..           - директория выше текущей
# ./some       - папка some в текущей директории тоже что и просто some
# /home        - директория с папками пользователей
# ~            - домашняя директория, аналог /home/username

# krillan@krillan-itp-ubuntu:~/Документы$ - имя_пользователя@имя_сервера:текущая_директория$

# Вне зависимости от языка системы можно писать имена директорий по умолчанию на аанглийском (например и "Загрузки" и "Downloads")

# При введении в терминал имен фаилов или директорий состоящих из нескольких слов разделенных обычным пробелом, нужно взять это название в одинарные кавычки
# $ cd ~/'Рабочий стол'       - переходим в директорию Рабочий стол


# В терминале можно запускать любые установленные приложения просто указав их название
# $ vim              - запустим текстовый редактор vim (выход из vim  :qa и нажать энтер)
# $ firefox          - запустить браузер firefox



echo "                                    Поиск команд и их описания"

# $ man -k time    - найдет все команды которые содержат в названии или описании слово time
# $ man uptime     - выведет какбы подменю с подробным описанием команды uptime (выход: q, поиск написать: \текст, переключиться на следующее слвпадение при поиске: n)
# $ info uptime    - выведет какбы подменю с альтернативной докумментацией к команде (выход: q)
# $ whatis uptime  - краткое описание команды uptime
# $ whereis uptime - выводит путь к местонахождению программы и местонахождению документации к ней



echo "                                  Основные и навигационные команды"

# $ exit      - закрыть терминал или вернуться в состояние предыдущего пользователя который был сменен через "su"
# $ clear     - очистить терминал от записей


# $ sudo reboot now             - перезапустить компьютер сейчас
# $ sudo shutdown now           - выключить компьютер сейчас


# $ hostname     - вывести название компьютера
# $ uptime       - показывает сколько времени и сколько времени включен компьютер, сколько пользователей


# 0. echo - оператор для вывода текстовых сообщений в терминал
# -n  - флаг отменяет перевод строки в конце строки(тоесть выведет в начале строки до адреса даже)
# $ echo "folder done"     - вывести сообщение folder done в терминал
# $ echo -n "folder done"  - вывести сообщение folder done в терминал
# $ echo folder done       - тоже самое(можно без кавычек)
# $ echo $PATH             - вывести переменные среды


# 1. pwd - выводит текущую рабочую директорию. PWD расшифровывается как «print working directory».
# ~$ pwd                #=> /home/username


# 2. cd - выполняет переход между директориями, после нее пишем полный или относительный путь.
# $ cd fname                   - перейти в папку fname в текущей директории (относиельноый путь)
# $ cd ~                       - перейти в домашнюю директорию активного пользователя
# $ cd                         - перейти в домашнюю директорию активного пользователя
# $ cd /                       - перейти в корневую директорию
# $ cd ~/Desktop               - перейти в директорию рабочего стола
# $ cd ~/Загрузки/ваша_папка   - перейти по полному пути
# $ cd Загрузки/ваша_папка     - перейти по относительному пути
# $ cd ..                      - перейти на директорию вверх
# $ cd ../Загрузки/ваша_папка  - перейти на директорию вверх и по относительному пути


# 3. ls - просмотреть содержимое какой либо директории
# $ ls                  - просмотреть содержимое текущей директории
# $ ls /home/username   - просмотреть содержимого в папке /home/username
# $ ls -R some          - посмотреть рекурсивно, тоесть и то что находится внутри директории some
# $ sudo ls -la -R /    - посмотреть содержимое всех директорий на компе (sudo тк некоторые доступны только скперюзеру)
# $ ls -l               - отображение подробной информации относительно файлов, линков(путь) и папок (доступ, владелец, вес)


# 4. tree - команда показывает все фаилы, папки как в данной директории, так и во всх поддиректориях в виде дерева, а так же пишет общее число директорий и фаилов. Изначально не установлена так что нужно установить
# $ sudo apt install tree              - установка команды tree
# $ tree                               - посмотреть дерево от текущей директории
# $ tree www                           - посмотреть дерево от директории www по относительному пути


echo "                                              Флаги"

# К каждой команде есть дополнительные опции (флаги). Они добавляют дополнительное действие при выполнении команды. Чтобы просмотреть все возможные опции для определенной команды пропишите после неё «--help»

# $ ls --help            - посмотреть все дополнительные опции к команде ls

# Примеры для ls
# $ ls -l                - отображение подробной информации относительно файлов, линков(путь) и папок (доступ, владелец, вес)
# $ ls -a                - показывает так же скрытые фаилы и дериктории(имена начинающиеся с . втч . и ..)
# $ ls -r                - выведет в обратном порядке (по умолчанию алфавитный)
# $ ls -p                - выведет в формате name/
# $ ls -p -r             - можно указывать несколько флагов
# $ ls -la               - или так

# между -r и -R нету разницы(? или в некоторых случаях всетаки есть ?)

# трибуты пишем не через дефис?  -v, -x...  Раньше всё через дефис было, а теперь без. Какая разница? - никакой (? только для архивов или везде ?)



echo "                                    Разные дополнительные команды"

# $ calendar     - выдаст все знаменательные мировые события, случившиеся в мире сегодня и завтра(нужно установить)
# $ cal          - выдаст удобный календарь на этот месяц(нужно установить ncal)
# $ date         - удобный формат даты и времени в строке
# $ bc           - превратить терминал в калькулятор

# $ xterm        - открыть дополнительный терминал xterm(нужно установить)



echo "                                 Спецсимволы для команд и путей"

# Можно помещать в аргументы команд, например названия фаилов или в пути

# *  - обозначает любое количество любых символов
# ?  - обозначает любой одиночный символ

















#
