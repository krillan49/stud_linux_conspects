echo "                                       Супер пользователь"

# Администратор в Linux называется супер пользователь(super user).

# Некоторые действия могут быть выполнены от имени администратора. Для выполнения действий от имени администратора перед командой нужно прописать ключевое слово sudo (super user do)

# При создании фаилов или папок от имени администратора(попросит пароль после нажатия Enter при первом обращении к sudo после открытия терминала), они будут иметь закрытые права доступа и пометку на значке фаила. Это означает, что их редактирование и удаление может быть выполнено только супер пользователем.

# $ sudo touch file.txt                   - создание фаила с правами администратора
# $ sudo nano file.txt                    - теперь для редактирования(или удаления) этого фаила тоже надо использовать sudo
# $ sudo !!                               - выполнить предыдущую команду (тут nano file.txt)

# Можно перейти в режим администратора при помощи команды смены пользователя, чтобы не писать перед каждой командой sudo
# $ sudo su                      - переход в режим администратора
# Теперь в пути у нас прописывается /root перед именем компьютера:
# krillan@krillan-itp-ubuntu:~/Документы$                        - было (обычный юзер)
# root@krillan-itp-ubuntu:/home/krillan/Документы#               - стало (суперюзер)
# # exit                         - возврат от суперпользователя к предыдущему пользователю
# # su krillan                   - (небезопасно) переход из режима администратора в режим пользователя

# возвращаться от root к обычному непривилегированному пользователю через `su username` - небезопасная практика. Возвращаться из суперпользовательской оболочки надо командой exit. Тогда попадёшь в исходную оболочку, а не запустишь новую внутри старой. Иначе получится, что можно будет из обычного пользователя попасть в root тоже командой exit без пароля. И это будет видно другим пользователям на тачке по запущенным процессам.
# root@krillan-itp-ubuntu:/home/krillan/Документы# exit
#=>
# krillan@krillan-itp-ubuntu:~/Документы$



echo "                              Права доступа. Смена прав и влапдельца фаила"

# Права доступа к фаилу или папке обозначаются 3мя цифрами (например 765), где:
# 1я цифра - (тут 7) права доступа для owner/владельца фаила (того кто его создал) (u)
# 2я цифра - (тут 6) права доступа для group/группы                                (g)
# 3я цифра - (тут 5) права доступа для всех остальных пользователей                (o)
# Значения каждой из 3х цифр может быть от 0 до 7

# Каждая цифра в параметрах доступа означет 3-значное двоичное число:
# 000 = 0, 001 = 1, 010 = 2, 011 = 3, 100 = 4, 101 = 5, 110 = 6, 111 = 7.
# где цифры 2ичного числа обозначают "rwx" (1я цифра - "r", 2я - "w", 3я - "x"), те r - четверки, w - двойки, x - единицы
# r - (read) возможность прочитать/открыть фаил (для папки это )
# w - (write) возможность записать/изменить в фаил
# x - (exequte) возможность запустить/исполнить фаил (для папки это открыть/войти в папку)
# Каждое из этих свойств может быть включено или отключено - всего комбинаций 8(2**3)
# 1 в соотв положении значит включен режим, 0 - выключен.

# 765 == (111 110 101) == (rwx rw- r-x) Тоесть владелец имеет полный доступ, группа не может исполнять, а остальные записать

# Права доступа и владельца фаилов можно посмотреть в терминале при помощи команды:
# $ ls -l
# =>
# -rw-r--r-- 1 root    root       5 [дата и время] file.txt
# -rw-r--r-- 1 root    root       8 [дата и время] file2.txt
# -rw-rw-r-- 1 krillan krillan   10 [дата и время] test.txt
# drwxrwxr-x 2 krillan krillan 4096 [дата и время] test
# drwxr-xr-x 2 root    root    4096 [дата и время] doc
# Где 1й символ(- или d) это обозначение фаила или папки соответсвенно, далее права доступа для всех 3х типов(rw- r-- r--), далее хз что за цифра, дплее владелец(root) и группа(root), далее вес фаила в байтах, дата и его название
# root - обозначает что папка или фаил созданы с правами суперпользователя


# 0. w - команда которая показывает инфу обо всех пользователях, что подключены к серверу/нашему крмпу, время подключения итд
# $ w                   - показать инфу о пользователях


# 1. chown (change ownership) - команда для изменения владельца и группы фаила(владелец:группа). Если меняем фаил с владельцем root или на владельца root то нужно выполнять команду от имени суперпользователя (sudo)

# $ sudo chown root:krillan file.txt         - теперь у фаила file.txt владелец будет root, а группа krillan
# $ ls -l          #=>
# -rw-r--r-- 1 root krillan 5 [дата и время] file.txt

# Чтобы сменить пользователя или группу папки нужно использовать допонительный флаг "-R"
# $ sudo chown -R krillan:krillan doc        - теперь у папки и владелец и группа krillan
# $ ls -l          #=>
# drwxr-xr-x 2 krillan krillan 4096 [дата и время] doc

# chgrp - команда меняет только группу для файла


# 2. chmod (change modification) - команда, чтобы менять права доступа к фаилу или папке, указывается в цифрах. Если права у фаила с владельцем root или на владельца root то нужно выполнять команду от имени суперпользователя (sudo)

# $ sudo chmod 664 file.txt                  - меняем права доступа на 664 фаилу file.txt
# $ ls -l          #=>
# -rw-rw-r-- 1 root krillan 5 [дата и время] file.txt
# Теперь пользователи из группы krillan могут редактировать фаил без прав суперпользователя

# Чтобы сменить права доступа папки нужно использовать допонительный флаг "-R"
# $ chmod -R 764 doc
# $ ls -l          #=>
# drwxrw-r-- 2 krillan krillan 4096 [дата и время] doc















#
