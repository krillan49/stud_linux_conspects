echo "                               Типы пользователей и связанные команды и фаилы"

# Линукс имеет два типа пользователей/акаунтов:
# стандартный   - не может использовать sudo
# администратор - может использовать sudo


# $ whoami                   - вывести логин текущего юзера

# $ who                      - какие юзерв сейчас залогинены в системе
# $ w                        - юзеры что сейчас подключены к системе, время подключения и в каких процессах они находятся

# $ id                       - вывести инфу о текущем пользователе, его айди, группы в которых состоит
# $ id goga                  - вывести ту же инфу о другом пользователе

# $ last                     - последние действия(входы) в систему и юзеры их проводившие


# Домашние директории всех пользователей хранятся в /home (работает как полный путь, тк начинается от корня)
# $ cd /home                - перейдем в директорию со всеми пользователями
# $ ls -l /home             - посмотрим домашние директории всех юзеров

# Чтобы перейти в домашнюю директорию другого юзера может понадобиться активировать режим суперюзера, тк 'sudo cd' может не работать, а прав доступа для перехода может не быть


# $ cat /etc/passwd         - посмотреть фаил содержащий всех пользователей в том числе и множество системных пользователей
#=> krillan:x:1000:1000:Krillan,,,:/home/krillan:/bin/bash
# x              - обозначает что пароль хранится в другом фаиле
# 1000           - юзер айди
# 1000           - группа айди
# Krillan,,,     - полное имя пользователя и комменты
# /home/krillan  - домашняя директория прльзователя
# /bin/bash      - шелл по умолчанию для запуска скриптов


# $ sudo cat /etc/shadow     - посмотреть фаил с зашифрованными паролями всех пользователей
#=> krillan:$y$ghfHF ... HJFhjdf:19854:0:99999:7:::
# $y$ghfHF ... HJFhjdf  - зашифрованный пароль(одинаковые пароли шифруются по разному)
# 19854                 - число дней с 1 января 1970 до смены пароля
# 0                     - через сколько дней можно поменять этот пароль
# 99999                 - когда обязательно нужно поменять пароль(те срок действия пароля)



echo "                                          Смена пользователя"

# $ su krillan               - сменить пользователя на krillan
# $ exit                     - вернуться на предыдущего пользователя


# (!! Добавить запись вида user@MyLinux, если при смене пользователя отображается только $ - Нужно ввести "bash" и станет запись нужного вида, можно посмотреть /etc/passwd, возможно для пользователя прописана оболочка /bin/sh, а должна быть /bin/bash)



echo "                                          Супер пользователь"

# Администратор в Linux может активировать супер пользователя(super user). Некоторые действия могут быть выполнены только от имени супер пользователя.

# sudo (super user do) - это ключевое слово нужно прописать перед кломандой для ее выполнения от имени супер пользователя. При первом обращении к sudo после открытия терминала попросит пароль после нажатия Enter

# При создании фаилов или папок от имени супер пользователя, они будут иметь закрытые права доступа и пометку об этом на иконке фаила. Это означает, что их редактирование и удаление может быть выполнено только от супер пользователя.

# $ sudo touch file.txt                   - создание фаила с правами супер пользователя
# $ sudo nano file.txt                    - теперь для редактирования(или удаления) этого фаила тоже надо использовать sudo

# $ ls -l
# =>
# -rw-r--r-- 1 root    root       5 [дата и время] file.txt
# root - обозначает что папка или фаил созданы с правами суперпользователя



echo "                                        Режим супер пользователя"

# Можно перейти в режим супер пользователя, чтобы не писать перед каждой командой 'sudo':
# $ sudo su                      - переход в режим супер пользователя

# Для некоторых дистрибутивов (например UbuntuMATE) возможно придется отдельно задать пароль супер пользователя, чтобы, режим супер пользователя работал
# $ sudo passwd root             - спросит пароль, предложит создать новый пароль для перехода на su

# В режиме супер-пользователя в пути у нас прописывается /root перед именем компьютера и адрес начинается с корня /:
# krillan@krillan-itp-ubuntu:~/Документы$                        - обычный юзер ($)
# root@krillan-itp-ubuntu:/home/krillan/Документы#               - суперюзер    (#)

# # exit                         - команда выхода из терминала(оболочки) так же осуществляет возврат от суперпользователя к предыдущему пользователю, тоесть возврат от root те оболочки суперпользователя обратно к исходной оболочке

# # su krillan                   - (! небезопасно) переход из режима администратора в режим пользователя. Небезопасно, тк запускается новая оболочка внутри старой и потом можно будет попасть в root из этого обычного пользователя при помощи команды exit без пароля. И это будет видно другим пользователям на тачке по запущенным процессам.



echo "                                   Создание, настройки, удаление пользователя"

# /etc/login.defs - фаил с конфигурацией, настраивающей параметры при создании нового юзера

# /etc/skel   - директория-скелет для домашней директории нового юзера. Если создать в ней какие-то директории или фаилы, то они появятся в домашней директории каждго нового, созданного после этого


# useradd - команда создания пользователя. Создать нового пользователя можно только имея права суперюзера
# -m  - флаг для создания домашней директории для пользователя. Параметр -m нужен только если в /etc/login.defs не стоит создание домашней директории по умолчанию. Eсли создание для юзера домашней директории в папке home не нужно, то вместо -m нужно написать -M.
# $ sudo useradd -m vegita             - создаем нового пользователя vegita и домашнюю директорию для него

# passwd - команда создания/изменения пароля для пользователя
# $ sudo passwd vegita                 - создаем/меняем пароль для пользователя vegita

# userdel - команда для удаления пользователя
# -r  - флаг чтобы стереть еще и все фаилы, директории и группы этого юзера(если в них не состоят другие)
# $ sudo userdel -r vegita             - удалит пользователя vegita и все связанные с ним фаилы, директории и группы



echo "                        Группы. Создание и удаление групп, добавление и исключение юзера"

# $ cat /etc/group           - посмотреть фаил всех групп(включая системные) и всех пользователей что в них находятся
#=> sudo:x:27:krillan,soso
# sudo          - имя группы(тут группа для активации суперюзера)
# krillan,soso  - пользователи что состоят в группе

# grep dbz /etc/group        - посмотреть группу dbz и всех ее пользователей


# groupadd - команда создания группы
# $ sudo groupadd dbz                   - создадим новую группу dbz

# groupdel - команда удаления группы
# $ sudo groupdel dbz                   - удалим группу dbz


# adduser - команда добавляет пользователя в группу
# $ sudo adduser krillan vboxsf         - добавляем пользователя krillan в группу vboxsf

# usermod -aG  - Альтернативный способо добавть в группу.
# S sudo usermod -aG sudo krillan       - добавляем пользователя krillan в группу sudo(те даем возможности суперпользователя)

# deluser - команда исключения пользователя из группы
# $ sudo deluser krillan dbz            - исключим юзера krillan из группы dbz



echo "                            Смена группы и/или владельца для фаила или директории"

# 1. chown (change ownership) - команда для изменения владельца и по желанию группы фаила(владелец:группа). Если меняем фаил с владельцем root или на владельца root то нужно выполнять команду от имени суперпользователя (sudo)
# -R  - флаг для тогдо чтобы менять владельца или группу и для папки и для вложенных на всех уровнях в нее папок и фаилов

# $ sudo chown root:krillan file.txt         - теперь у фаила file.txt владелец будет root, а группа krillan
# $ sudo chown krillan file.txt              - меняем/назначаем только владельца фаила

# $ sudo chown -R krillan:krillan doc        - теперь у папки и всех фаилов и папок внутри и владелец и группа krillan (потмогает решить проблему при ошибках, когда гдето проставляется root изза чето могут быть проблемы при запуске приложений)


# 2. chgrp - команда меняет только группу для файла
# $ sudo chgrp dbz file.txt                  - меняем/назначаем группу dbz для фаила file.txt
















#
